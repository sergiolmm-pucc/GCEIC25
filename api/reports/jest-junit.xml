<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="136" failures="0" errors="0" time="8.4">
  <testsuite name="markupMultiplicador" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="3.849" tests="4">
    <testcase classname="markupMultiplicador deve retornar erro 400 se faltar campo obrigatório" name="markupMultiplicador deve retornar erro 400 se faltar campo obrigatório" time="0.046">
    </testcase>
    <testcase classname="markupMultiplicador deve retornar erro 400 se soma de percentuais ≥ 100%" name="markupMultiplicador deve retornar erro 400 se soma de percentuais ≥ 100%" time="0.003">
    </testcase>
    <testcase classname="markupMultiplicador calcula corretamente markup e preço de venda" name="markupMultiplicador calcula corretamente markup e preço de venda" time="0.002">
    </testcase>
    <testcase classname="markupMultiplicador markup = 1 e precoVenda = custo quando percentuais = 0" name="markupMultiplicador markup = 1 e precoVenda = custo quando percentuais = 0" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Testes para o cálculo do ETEC" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="3.793" tests="5">
    <testcase classname="Testes para o cálculo do ETEC Calcular o custo mensal da empregada" name="Testes para o cálculo do ETEC Calcular o custo mensal da empregada" time="0.08">
    </testcase>
    <testcase classname="Testes para o cálculo do ETEC Calcular férias mensal" name="Testes para o cálculo do ETEC Calcular férias mensal" time="0.002">
    </testcase>
    <testcase classname="Testes para o cálculo do ETEC Calcular décimo terceiro proporcional" name="Testes para o cálculo do ETEC Calcular décimo terceiro proporcional" time="0.009">
    </testcase>
    <testcase classname="Testes para o cálculo do ETEC Calcular do eSocial" name="Testes para o cálculo do ETEC Calcular do eSocial" time="0.005">
    </testcase>
    <testcase classname="Testes para o cálculo do ETEC Calcular valor de rescisão" name="Testes para o cálculo do ETEC Calcular valor de rescisão" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="undefined" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="4.272" tests="17">
    <testcase classname=" Teste de multiplicação de markup" name=" Teste de multiplicação de markup" time="0.116">
    </testcase>
    <testcase classname=" Teste de multiplicação de markup com valores negativos" name=" Teste de multiplicação de markup com valores negativos" time="0.001">
    </testcase>
    <testcase classname=" Teste de multiplicação de markup com valores zero" name=" Teste de multiplicação de markup com valores zero" time="0.001">
    </testcase>
    <testcase classname=" Teste de multiplicação de markup com valores decimais" name=" Teste de multiplicação de markup com valores decimais" time="0.001">
    </testcase>
    <testcase classname=" Teste de divisão de markup" name=" Teste de divisão de markup" time="0.002">
    </testcase>
    <testcase classname=" Teste de divisão de markup com valores negativos" name=" Teste de divisão de markup com valores negativos" time="0.001">
    </testcase>
    <testcase classname=" Teste de divisão de markup com valores zero" name=" Teste de divisão de markup com valores zero" time="0.003">
    </testcase>
    <testcase classname=" Teste de divisão de markup com valores decimais" name=" Teste de divisão de markup com valores decimais" time="0.002">
    </testcase>
    <testcase classname=" Teste de multiplicação de markup com valores não numéricos" name=" Teste de multiplicação de markup com valores não numéricos" time="0.001">
    </testcase>
    <testcase classname=" Teste de multiplicação de markup com valores numeros e não numéricos" name=" Teste de multiplicação de markup com valores numeros e não numéricos" time="0.001">
    </testcase>
    <testcase classname=" Teste da função sobre não retornar as strings" name=" Teste da função sobre não retornar as strings" time="0.006">
    </testcase>
    <testcase classname=" Teste de autenticação" name=" Teste de autenticação" time="0.001">
    </testcase>
    <testcase classname=" Teste de autenticação" name=" Teste de autenticação" time="0.002">
    </testcase>
    <testcase classname=" Teste de autenticação" name=" Teste de autenticação" time="0.007">
    </testcase>
    <testcase classname=" Teste de autenticação" name=" Teste de autenticação" time="0.001">
    </testcase>
    <testcase classname=" Teste de autenticação" name=" Teste de autenticação" time="0.001">
    </testcase>
    <testcase classname=" Teste de autenticação" name=" Teste de autenticação" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Função calcularAposentadoria" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="5.022" tests="34">
    <testcase classname="Função calcularAposentadoria Mulher que já pode se aposentar" name="Função calcularAposentadoria Mulher que já pode se aposentar" time="0.047">
    </testcase>
    <testcase classname="Função calcularAposentadoria Homem que já pode se aposentar" name="Função calcularAposentadoria Homem que já pode se aposentar" time="0.005">
    </testcase>
    <testcase classname="Função calcularAposentadoria Mulher que não pode se aposentar por idade" name="Função calcularAposentadoria Mulher que não pode se aposentar por idade" time="0.003">
    </testcase>
    <testcase classname="Função calcularAposentadoria Homem que não pode se aposentar por contribuição" name="Função calcularAposentadoria Homem que não pode se aposentar por contribuição" time="0.002">
    </testcase>
    <testcase classname="Função calcularAposentadoria Mulher que não pode se aposentar por idade e contribuição" name="Função calcularAposentadoria Mulher que não pode se aposentar por idade e contribuição" time="0.007">
    </testcase>
    <testcase classname="Função calcularAposentadoria Idade negativa" name="Função calcularAposentadoria Idade negativa" time="0.002">
    </testcase>
    <testcase classname="Função calcularAposentadoria Contribuição negativa" name="Função calcularAposentadoria Contribuição negativa" time="0.002">
    </testcase>
    <testcase classname="Função calcularRegra Deve retornar 400 se faltar algum campo" name="Função calcularRegra Deve retornar 400 se faltar algum campo" time="0.002">
    </testcase>
    <testcase classname="Função calcularRegra Mulher que já pode se aposentar por idade mínima (62 anos)" name="Função calcularRegra Mulher que já pode se aposentar por idade mínima (62 anos)" time="0.005">
    </testcase>
    <testcase classname="Função calcularRegra Homem que atinge pontuação progressiva + tempo mínimo de contribuição" name="Função calcularRegra Homem que atinge pontuação progressiva + tempo mínimo de contribuição" time="0.003">
    </testcase>
    <testcase classname="Função calcularRegra Regra especial para professor (sem outras condições atendidas)" name="Função calcularRegra Regra especial para professor (sem outras condições atendidas)" time="0.001">
    </testcase>
    <testcase classname="Função calcularRegra Aposentadoria rural com idade e tempo reduzidos (mulher)" name="Função calcularRegra Aposentadoria rural com idade e tempo reduzidos (mulher)" time="0.001">
    </testcase>
    <testcase classname="Função calcularRegra Incapacidade: tempo ≥ 12 meses, sem idade mínima" name="Função calcularRegra Incapacidade: tempo ≥ 12 meses, sem idade mínima" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Mulher que já pode se aposentar por pontuação" name="Função calcularPontuacao Mulher que já pode se aposentar por pontuação" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem que já pode se aposentar por pontuação" name="Função calcularPontuacao Homem que já pode se aposentar por pontuação" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Mulher que faltam anos para atingir a pontuação" name="Função calcularPontuacao Mulher que faltam anos para atingir a pontuação" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem que faltam anos para atingir a pontuação" name="Função calcularPontuacao Homem que faltam anos para atingir a pontuação" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem com idade baixa mas alta contribuição, faltando poucos anos" name="Função calcularPontuacao Homem com idade baixa mas alta contribuição, faltando poucos anos" time="0.002">
    </testcase>
    <testcase classname="Função calcularPontuacao Idade negativa deve retornar erro" name="Função calcularPontuacao Idade negativa deve retornar erro" time="0.027">
    </testcase>
    <testcase classname="Função calcularPontuacao Contribuição negativa deve retornar erro" name="Função calcularPontuacao Contribuição negativa deve retornar erro" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Sexo inválido deve retornar erro" name="Função calcularPontuacao Sexo inválido deve retornar erro" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Dados incompletos (idade faltando) deve retornar erro" name="Função calcularPontuacao Dados incompletos (idade faltando) deve retornar erro" time="0.001">
    </testcase>
    <testcase classname="Função calcularPontuacao Dados incompletos (contribuicao faltando) deve retornar erro" name="Função calcularPontuacao Dados incompletos (contribuicao faltando) deve retornar erro" time="0.004">
    </testcase>
    <testcase classname="Função calcularPontuacao Mulher com pontuação exata no limite (100)" name="Função calcularPontuacao Mulher com pontuação exata no limite (100)" time="0.003">
    </testcase>
    <testcase classname="Função calcularPontuacao Homem com pontuação exata no limite (105)" name="Função calcularPontuacao Homem com pontuação exata no limite (105)" time="0.002">
    </testcase>
    <testcase classname="Rotas de Histórico Deve registrar uma operação no histórico" name="Rotas de Histórico Deve registrar uma operação no histórico" time="0.004">
    </testcase>
    <testcase classname="Rotas de Histórico Deve filtrar histórico por tipo" name="Rotas de Histórico Deve filtrar histórico por tipo" time="0.005">
    </testcase>
    <testcase classname="Rotas de Histórico Deve limitar o histórico a 100 operações" name="Rotas de Histórico Deve limitar o histórico a 100 operações" time="0.017">
    </testcase>
    <testcase classname="Rotas de Histórico Deve ordenar histórico do mais recente para o mais antigo" name="Rotas de Histórico Deve ordenar histórico do mais recente para o mais antigo" time="0.118">
    </testcase>
    <testcase classname="Rotas de Histórico Deve registrar diferentes tipos de operações" name="Rotas de Histórico Deve registrar diferentes tipos de operações" time="0.003">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Pessoa que já pode se aposentar" name="Função calcularTempoAposentadoria Pessoa que já pode se aposentar" time="0.001">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Pessoa que falta tempo para idade mínima" name="Função calcularTempoAposentadoria Pessoa que falta tempo para idade mínima" time="0.001">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Pessoa que falta tempo de contribuição" name="Função calcularTempoAposentadoria Pessoa que falta tempo de contribuição" time="0.005">
    </testcase>
    <testcase classname="Função calcularTempoAposentadoria Dados incompletos" name="Função calcularTempoAposentadoria Dados incompletos" time="0.004">
    </testcase>
  </testsuite>
  <testsuite name="cpfValidatorController.validate" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:31:01" time="0.572" tests="3">
    <testcase classname="cpfValidatorController.validate deve retornar erro 400 se não enviar CPF" name="cpfValidatorController.validate deve retornar erro 400 se não enviar CPF" time="0.01">
    </testcase>
    <testcase classname="cpfValidatorController.validate deve retornar sucesso para CPF válido" name="cpfValidatorController.validate deve retornar sucesso para CPF válido" time="0.007">
    </testcase>
    <testcase classname="cpfValidatorController.validate deve retornar erro para CPF inválido" name="cpfValidatorController.validate deve retornar erro para CPF inválido" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="calculatePremiumController.calculate" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:31:01" time="1.056" tests="3">
    <testcase classname="calculatePremiumController.calculate deve retornar erro 400 se faltar parâmetros" name="calculatePremiumController.calculate deve retornar erro 400 se faltar parâmetros" time="0.006">
    </testcase>
    <testcase classname="calculatePremiumController.calculate deve retornar o prêmio para dados válidos" name="calculatePremiumController.calculate deve retornar o prêmio para dados válidos" time="0.002">
    </testcase>
    <testcase classname="calculatePremiumController.calculate deve retornar erro se algum parâmetro for do tipo errado" name="calculatePremiumController.calculate deve retornar erro se algum parâmetro for do tipo errado" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="cnhValidatorController.validate" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:31:02" time="0.684" tests="2">
    <testcase classname="cnhValidatorController.validate deve retornar erro 400 se não enviar cnhNumber" name="cnhValidatorController.validate deve retornar erro 400 se não enviar cnhNumber" time="0.005">
    </testcase>
    <testcase classname="cnhValidatorController.validate deve retornar isValid para CNH válida" name="cnhValidatorController.validate deve retornar isValid para CNH válida" time="0.005">
    </testcase>
  </testsuite>
  <testsuite name="cálculo de manutenção" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="6.574" tests="5">
    <testcase classname="cálculo de manutenção Calcula corretamente o custo de manutenção" name="cálculo de manutenção Calcula corretamente o custo de manutenção" time="0.087">
    </testcase>
    <testcase classname=" rota GET /ajuda Retorna o texto de ajuda corretamente" name=" rota GET /ajuda Retorna o texto de ajuda corretamente" time="0.117">
    </testcase>
    <testcase classname="cálculo elétrico Calcula corretamente o custo elétrico" name="cálculo elétrico Calcula corretamente o custo elétrico" time="0.003">
    </testcase>
    <testcase classname="cálculo hidráulico Calcula corretamente o custo hidráulico" name="cálculo hidráulico Calcula corretamente o custo hidráulico" time="0.004">
    </testcase>
    <testcase classname="cálculo custo total geral Calcula corretamente o custo total geral somando manutenção, elétrica e hidráulica" name="cálculo custo total geral Calcula corretamente o custo total geral somando manutenção, elétrica e hidráulica" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Cálculo de IPI - Service" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="6.605" tests="5">
    <testcase classname="Cálculo de IPI - Service Calcula corretamente o IPI com valorProduto e aliquotaIPI" name="Cálculo de IPI - Service Calcula corretamente o IPI com valorProduto e aliquotaIPI" time="0.051">
    </testcase>
    <testcase classname="Cálculo de IPI - Service Calcula corretamente o IPI com frete e despesas acessórias" name="Cálculo de IPI - Service Calcula corretamente o IPI com frete e despesas acessórias" time="0.004">
    </testcase>
    <testcase classname="Rota POST /impostos/ipi Retorna o valor do IPI corretamente" name="Rota POST /impostos/ipi Retorna o valor do IPI corretamente" time="0.191">
    </testcase>
    <testcase classname="Rota POST /impostos/ipi Calcula o IPI com frete e despesas acessórias corretamente" name="Rota POST /impostos/ipi Calcula o IPI com frete e despesas acessórias corretamente" time="0.027">
    </testcase>
    <testcase classname="Rota POST /impostos/ipi Retorna erro se faltar campos obrigatórios" name="Rota POST /impostos/ipi Retorna erro se faltar campos obrigatórios" time="0.02">
    </testcase>
  </testsuite>
  <testsuite name="Cálculo de ISS - Service" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="6.804" tests="6">
    <testcase classname="Cálculo de ISS - Service Calcula corretamente o ISS" name="Cálculo de ISS - Service Calcula corretamente o ISS" time="0.042">
    </testcase>
    <testcase classname="Cálculo de ISS - Service Lança erro se valorServico ou aliquotaISS não forem fornecidos" name="Cálculo de ISS - Service Lança erro se valorServico ou aliquotaISS não forem fornecidos" time="0.036">
    </testcase>
    <testcase classname="Cálculo de ISS - Service Lança erro se os valores não forem numéricos" name="Cálculo de ISS - Service Lança erro se os valores não forem numéricos" time="0.002">
    </testcase>
    <testcase classname="Rota POST /api/iss Retorna corretamente o valor do ISS" name="Rota POST /api/iss Retorna corretamente o valor do ISS" time="0.231">
    </testcase>
    <testcase classname="Rota POST /api/iss Retorna erro se faltar campos obrigatórios" name="Rota POST /api/iss Retorna erro se faltar campos obrigatórios" time="0.039">
    </testcase>
    <testcase classname="Rota POST /api/iss Retorna erro se os valores não forem numéricos" name="Rota POST /api/iss Retorna erro se os valores não forem numéricos" time="0.025">
    </testcase>
  </testsuite>
  <testsuite name="Testes ETEC2" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="6.84" tests="6">
    <testcase classname="Testes ETEC2 POST /salario-liquido" name="Testes ETEC2 POST /salario-liquido" time="0.237">
    </testcase>
    <testcase classname="Testes ETEC2 POST /inss" name="Testes ETEC2 POST /inss" time="0.064">
    </testcase>
    <testcase classname="Testes ETEC2 POST /fgts" name="Testes ETEC2 POST /fgts" time="0.048">
    </testcase>
    <testcase classname="Testes ETEC2 POST /decimo" name="Testes ETEC2 POST /decimo" time="0.03">
    </testcase>
    <testcase classname="Testes ETEC2 POST /ferias" name="Testes ETEC2 POST /ferias" time="0.046">
    </testcase>
    <testcase classname="Testes ETEC2 POST /total-mensal" name="Testes ETEC2 POST /total-mensal" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="MKP1 API Tests" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="6.937" tests="8">
    <testcase classname="MKP1 API Tests POST /mkp1/markup-simples deve calcular markup simples corretamente" name="MKP1 API Tests POST /mkp1/markup-simples deve calcular markup simples corretamente" time="0.242">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/markup-simples deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/markup-simples deve retornar erro quando faltar parâmetros" time="0.031">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/markup-detalhado deve calcular markup detalhado corretamente" name="MKP1 API Tests POST /mkp1/markup-detalhado deve calcular markup detalhado corretamente" time="0.015">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/markup-detalhado deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/markup-detalhado deve retornar erro quando faltar parâmetros" time="0.063">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/sugestao-preco deve calcular sugestão de preço corretamente" name="MKP1 API Tests POST /mkp1/sugestao-preco deve calcular sugestão de preço corretamente" time="0.052">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/sugestao-preco deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/sugestao-preco deve retornar erro quando faltar parâmetros" time="0.03">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/lucro-obtido deve calcular lucro obtido corretamente" name="MKP1 API Tests POST /mkp1/lucro-obtido deve calcular lucro obtido corretamente" time="0.028">
    </testcase>
    <testcase classname="MKP1 API Tests POST /mkp1/lucro-obtido deve retornar erro quando faltar parâmetros" name="MKP1 API Tests POST /mkp1/lucro-obtido deve retornar erro quando faltar parâmetros" time="0.026">
    </testcase>
  </testsuite>
  <testsuite name="Cálculo de IRPJ - Service" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="6.858" tests="8">
    <testcase classname="Cálculo de IRPJ - Service Lucro Real abaixo do limite (60 mil)" name="Cálculo de IRPJ - Service Lucro Real abaixo do limite (60 mil)" time="0.047">
    </testcase>
    <testcase classname="Cálculo de IRPJ - Service Lucro Real acima do limite" name="Cálculo de IRPJ - Service Lucro Real acima do limite" time="0.002">
    </testcase>
    <testcase classname="Cálculo de IRPJ - Service Lucro Presumido" name="Cálculo de IRPJ - Service Lucro Presumido" time="0.002">
    </testcase>
    <testcase classname="Rota POST /impostos/irpj Retorna IRPJ corretamente - Lucro Real abaixo do limite" name="Rota POST /impostos/irpj Retorna IRPJ corretamente - Lucro Real abaixo do limite" time="0.213">
    </testcase>
    <testcase classname="Rota POST /impostos/irpj Retorna IRPJ corretamente - Lucro Real acima do limite" name="Rota POST /impostos/irpj Retorna IRPJ corretamente - Lucro Real acima do limite" time="0.068">
    </testcase>
    <testcase classname="Rota POST /impostos/irpj Retorna IRPJ corretamente - Lucro Presumido" name="Rota POST /impostos/irpj Retorna IRPJ corretamente - Lucro Presumido" time="0.033">
    </testcase>
    <testcase classname="Rota POST /impostos/irpj Retorna erro se campo obrigatório faltar" name="Rota POST /impostos/irpj Retorna erro se campo obrigatório faltar" time="0.027">
    </testcase>
    <testcase classname="Rota POST /impostos/irpj Retorna erro se valor não for numérico" name="Rota POST /impostos/irpj Retorna erro se valor não for numérico" time="0.032">
    </testcase>
  </testsuite>
  <testsuite name="Cálculo de ICMS - Service" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:31:01" time="2.881" tests="3">
    <testcase classname="Cálculo de ICMS - Service Calcula corretamente o valor do ICMS" name="Cálculo de ICMS - Service Calcula corretamente o valor do ICMS" time="0.005">
    </testcase>
    <testcase classname="Rota POST /api/icms Retorna o valor do ICMS corretamente" name="Rota POST /api/icms Retorna o valor do ICMS corretamente" time="0.227">
    </testcase>
    <testcase classname="Rota POST /api/icms Retorna erro se os campos não forem enviados" name="Rota POST /api/icms Retorna erro se os campos não forem enviados" time="0.024">
    </testcase>
  </testsuite>
  <testsuite name="Testes da rota /calcular-volume" errors="0" failures="0" skipped="0" timestamp="2025-06-09T19:30:57" time="7.291" tests="27">
    <testcase classname="Testes da rota /calcular-volume Deve calcular volume de piscina retangular corretamente" name="Testes da rota /calcular-volume Deve calcular volume de piscina retangular corretamente" time="0.199">
    </testcase>
    <testcase classname="Testes da rota /calcular-volume Deve retornar erro se faltar tipo de piscina" name="Testes da rota /calcular-volume Deve retornar erro se faltar tipo de piscina" time="0.019">
    </testcase>
    <testcase classname="Testes da rota /login Deve realizar login com sucesso usando credenciais válidas" name="Testes da rota /login Deve realizar login com sucesso usando credenciais válidas" time="0.073">
    </testcase>
    <testcase classname="Testes da rota /login Deve falhar no login com credenciais inválidas" name="Testes da rota /login Deve falhar no login com credenciais inválidas" time="0.047">
    </testcase>
    <testcase classname="Testes da rota /agua Deve calcular corretamente o custo da água" name="Testes da rota /agua Deve calcular corretamente o custo da água" time="0.036">
    </testcase>
    <testcase classname="Testes da rota /agua Deve aceitar números com vírgula no formato brasileiro" name="Testes da rota /agua Deve aceitar números com vírgula no formato brasileiro" time="0.028">
    </testcase>
    <testcase classname="Testes da rota /agua Deve retornar erro se faltar parâmetros" name="Testes da rota /agua Deve retornar erro se faltar parâmetros" time="0.022">
    </testcase>
    <testcase classname="Testes da função calcularManutencaoMensal Deve calcular corretamente o custo de manutenção mensal com números padrão" name="Testes da função calcularManutencaoMensal Deve calcular corretamente o custo de manutenção mensal com números padrão" time="0.029">
    </testcase>
    <testcase classname="Testes da função calcularManutencaoMensal Deve aceitar números no formato brasileiro (vírgula como decimal)" name="Testes da função calcularManutencaoMensal Deve aceitar números no formato brasileiro (vírgula como decimal)" time="0.032">
    </testcase>
    <testcase classname="Testes da função calcularManutencaoMensal Deve aceitar números com ponto como milhar e vírgula como decimal (ex.: &quot;1.000,50&quot;)" name="Testes da função calcularManutencaoMensal Deve aceitar números com ponto como milhar e vírgula como decimal (ex.: &quot;1.000,50&quot;)" time="0.023">
    </testcase>
    <testcase classname="Testes da função calcularManutencaoMensal Deve retornar erro se faltar qualquer campo obrigatório" name="Testes da função calcularManutencaoMensal Deve retornar erro se faltar qualquer campo obrigatório" time="0.019">
    </testcase>
    <testcase classname="Testes da função calcularMob Deve calcular corretamente o custo total de MOB com valores válidos" name="Testes da função calcularMob Deve calcular corretamente o custo total de MOB com valores válidos" time="0.018">
    </testcase>
    <testcase classname="Testes da função calcularMob Deve retornar erro se faltar algum campo obrigatório" name="Testes da função calcularMob Deve retornar erro se faltar algum campo obrigatório" time="0.007">
    </testcase>
    <testcase classname="Testes da função calcularMob Deve retornar erro se algum valor for inválido (não numérico)" name="Testes da função calcularMob Deve retornar erro se algum valor for inválido (não numérico)" time="0.015">
    </testcase>
    <testcase classname="Testes da função calcularMob Deve calcular corretamente se os valores forem zero" name="Testes da função calcularMob Deve calcular corretamente se os valores forem zero" time="0.01">
    </testcase>
    <testcase classname="Testes da função calcularMob Deve retornar erro se algum valor for negativo" name="Testes da função calcularMob Deve retornar erro se algum valor for negativo" time="0.012">
    </testcase>
    <testcase classname="Testes da rota /eletrico Deve calcular corretamente com dados válidos" name="Testes da rota /eletrico Deve calcular corretamente com dados válidos" time="0.014">
    </testcase>
    <testcase classname="Testes da rota /eletrico Deve retornar erro se uma quantidade tiver vírgula" name="Testes da rota /eletrico Deve retornar erro se uma quantidade tiver vírgula" time="0.015">
    </testcase>
    <testcase classname="Testes da rota /eletrico Deve retornar erro se uma quantidade tiver ponto" name="Testes da rota /eletrico Deve retornar erro se uma quantidade tiver ponto" time="0.014">
    </testcase>
    <testcase classname="Testes da rota /eletrico Deve aceitar preços no formato brasileiro com milhar e vírgula" name="Testes da rota /eletrico Deve aceitar preços no formato brasileiro com milhar e vírgula" time="0.023">
    </testcase>
    <testcase classname="Testes da rota /eletrico Deve retornar erro se faltar algum campo" name="Testes da rota /eletrico Deve retornar erro se faltar algum campo" time="0.009">
    </testcase>
    <testcase classname="Testes da rota /eletrico Deve retornar erro se algum campo tiver texto inválido" name="Testes da rota /eletrico Deve retornar erro se algum campo tiver texto inválido" time="0.018">
    </testcase>
    <testcase classname="Testes da rota /hidraulico Deve calcular corretamente com dados válidos" name="Testes da rota /hidraulico Deve calcular corretamente com dados válidos" time="0.013">
    </testcase>
    <testcase classname="Testes da rota /hidraulico Deve retornar erro se faltar algum campo" name="Testes da rota /hidraulico Deve retornar erro se faltar algum campo" time="0.019">
    </testcase>
    <testcase classname="Testes da rota /hidraulico Deve retornar erro se algum campo for texto inválido" name="Testes da rota /hidraulico Deve retornar erro se algum campo for texto inválido" time="0.013">
    </testcase>
    <testcase classname="Testes da rota /hidraulico Deve retornar erro se valores forem negativos" name="Testes da rota /hidraulico Deve retornar erro se valores forem negativos" time="0.005">
    </testcase>
    <testcase classname="Testes da rota /hidraulico Deve retornar tipo de tubulação sempre em minúsculo" name="Testes da rota /hidraulico Deve retornar tipo de tubulação sempre em minúsculo" time="0.009">
    </testcase>
  </testsuite>
</testsuites>