name: Deploy branch

on:
  push:
    branches: 
      - 'main'
    paths:
      - 'api/**'  
  
  workflow_dispatch:
    inputs:
      environment:
        description: Environment
        type: choice
        required: true
        default: dev
        options:
          - dev
          - prod
          - stage
jobs:       
  getCode:
    runs-on: ubuntu-latest
    steps:
      - name: Get code from repositori to evaluate
        uses: actions/checkout@v3
      - name: lista diretorio
        run: ls -la
        
  test:
    needs: getCode
    permissions: write-all
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api  # Define o diretório base para todos os comandos
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Get Code from repository
        uses: actions/checkout@v3
      - name: lista diretorio
        run: ls -la     
      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Instala Dependencias
        run: npm ci
  #    - name: Run Lint
  #      run:
  #           npm run lint
      # aqui uma entrada para cada teste
      - name: Roda os testes
        run: npm test

      - name: lista
        run: ls -la

      - name: Gera o Relatório de testes
        uses: dorny/test-reporter@v1
        if: success() || failure() # roda de qualquer maneira
        with:
          name: JEST tests
          path: api/j*.xml
          reporter: jest-junit
        
  Deploy:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api  # Define o diretório base para todos os comandos    
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Faz sincronismo com o Glitch
        uses: kanadgupta/glitch-sync@v3.0.1
        with:
          auth-token: "${{ secrets.authToken }}"
          project-id: "${{ secrets.projectId }}"
          path: 'api'